name: Build and Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn clean install
          mkdir artifacts && cp target/*.jar artifacts
          cd artifacts && ls

#      - name: Save artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: github-action-artifact
#          path: artifacts

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build and Push
        env:
          ECR_REPOSITORY: meditrust-api
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          ECR_REGISTRY_ALIAS: ${{ secrets.ECR_REGISTRY_ALIAS }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:latest
    outputs:
      registry: ${{ steps.login-ecr-public.outputs.registry }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: SSH and deploy Docker container
        env:
          ECR_REPOSITORY: meditrust-api
          ECR_REGISTRY: ${{ needs.build.outputs.registry }}
          ECR_REGISTRY_ALIAS: ${{ secrets.ECR_REGISTRY_ALIAS }}
        run: |
          ssh -o StrictHostKeyChecking=no -t ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
          sudo docker stop $ECR_REPOSITORY || true
          sudo docker rm -f $ECR_REPOSITORY || true
          sudo docker rmi $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:latest || true
          sudo docker run --env-file .env --name $ECR_REPOSITORY -p 80:8080 $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:latest
          EOF
